Create a child process in Linux using the fork system call

code:

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <fcntl.h>

int main() {
    pid_t p, p1, p2;

    // Create multiple child processes using fork()
    fork();
    fork();
    fork();

    // Get process ID and parent process ID
    p = getpid();
    p1 = getppid();
    printf("Using fork(), the current process ID is %d and its parent process ID is %d\n", p, p1);

    // Get user IDs
    p2 = getuid();
    printf("The real user ID of the calling process is %d\n", p2);
    p2 = geteuid();
    printf("The effective user ID of the calling process is %d\n", p2);

    // Get group IDs
    p2 = getgid();
    printf("The real group ID of the calling process is %d\n", p2);
    p2 = getegid();
    printf("The effective group ID of the calling process is %d\n", p2);

    // Implementation of open(), close(), read(), and write()
    int fd;
    char buffer[80];
    static char message[] = "Hello";

    fd = open("test.txt", O_RDWR);
    if (fd != -1) {
        printf("test.txt opened with read/write access\n");
        write(fd, message, sizeof(message));
        lseek(fd, 0, 0);
        read(fd, buffer, sizeof(message));
        printf("%s was written to test.txt\n", buffer);
        close(fd);
    }

    return 0;
}



how to run:
sudo apt install gcc //if not present
gcc program.c -o program
./program
